View(df_up_template)
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface/app')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface/app')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_upwards')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
View(clickssubmit)
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_downwards')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_steady')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_increasing_right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_constant_right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_constant_left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_constant_right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_decreasing_left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_increasing_left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface_seasonal_data_increasing_left')
devtools::install_github("Jippiyay/masterapi")
install.packages("devtools")
devtools::install_github("Jippiyay/masterapi")
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface/app')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction_interface/app')
?masterapi
??masterapi
uninstall.package(masterapi)
library(masterapi)
remove.packages("masterapi", lib="~/R/x86_64-pc-linux-gnu-library/4.2")
install.packages("masterapi")
install.packages("masterapi")
install.packages("masterapi")
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-decreasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-decreasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-constant-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-decreasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-constant-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-decreasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-decreasing-right')
lager_data_fore %>%
filter(Lager == c("A")) %>%
ggplot(aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager)) +
xlab("Monate") + theme_bw() +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month", expand = c(0.05, 0, 0.05, 0)) +
scale_color_manual(values = c("A" = "steelblue")) +
geom_vline(xintercept = as.numeric(as.Date("2022-07-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept = as.numeric(as.Date("2022-08-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept= as.numeric(as.Date("2022-09-01")), linetype=2,  color = "darkgrey") +
geom_smooth(aes(x=time, y=fc1), colour='blue', data=df_Fc1, stat='identity') +
geom_smooth(aes(x=time, y=fc2), colour='#E6B700', data=df_Fc2, stat='identity') +
geom_smooth(aes(x=time, y=fc3), colour='green', data=df_Fc3, stat='identity') +
scale_color_manual(name = "Forecast", values = c("fc1" = "blue", "fc2" = "#E6B700", "fc3" = "green"), labels = c("Forecast 1", "Forecast 2", "Forecast 3"),
guide = "legend")
library(shiny)
library(ggplot2)
library(dplyr)
library(readxl)
library(scales)
library(fabletools)
library(fable)
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
beispiel_filialdaten <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/beispiel_filialdaten.xlsx")
View(beispiel_filialdaten)
library(shiny)
library(ggplot2)
library(dplyr)
library(readxl)
library(scales)
library(fabletools)
library(fable)
beispiel_filialdaten <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/beispiel_filialdaten.xlsx")
View(beispiel_filialdaten)
ggplot(beispiel_filialdaten, aes(x = Quartal), group =1) +
geom_line(aes(y = sales, colour = store)) +
scale_y_continuous(name = "sales", breaks = seq(from = 0, to = 700, by = 100), expand = c(0, 0), limits = c(0, 700)) + theme_bw()
lager_data <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel.xlsx")
View(lager_data)
lager_data["Monate"] <- as.Date(lager_data$Monate)
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# forecast plot for warehouse A
lager_data_fore <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel_forecast.xlsx")
View(lager_data_fore)
lager_data_fore["Monate"] <- as.Date(lager_data_fore$Monate)
start_date <- as.Date("2022-06-01")
end_date <- as.Date("2022-09-01")
M = c(190, 185, 185, 180)
df_Forecast = data.frame(time = seq( start_date, end_date, by = "1 month" ), M , upper_bound = 1.02*M, lower_bound = 0.98 * M,isin = "Prognose")
lager_data_fore %>%
filter(Lager == c("A")) %>%
ggplot(aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager)) +
xlab("Monate") + theme_bw() +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month", expand = c(0.05, 0, 0.05, 0)) +
scale_color_manual(values = c("A" = "steelblue")) +
geom_vline(xintercept = as.numeric(as.Date("2022-07-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept = as.numeric(as.Date("2022-08-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept = as.numeric(as.Date("2022-09-01")), linetype=2,  color = "darkgrey") +
geom_smooth(aes(x=time, y=M, ymax=upper_bound, ymin=lower_bound), colour='blue', data=df_Forecast, stat='identity')
# forecast plot for warehouse A with three line
lager_data_fore <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel_forecast.xlsx")
#View(lager_data_fore)
lager_data_fore["Monate"] <- as.Date(lager_data_fore$Monate)
start_date <- as.Date("2022-06-01")
end_date <- as.Date("2022-09-01")
fc1 = c(190, 185, 185, 180)
fc2 = c(190, 195, 200, 185)
fc3 = c(190, 180, 170, 165)
df_Fc1 = data.frame(time = seq( start_date, end_date, by = "1 month" ), fc1 , upper_bound = 1.02*M, lower_bound = 0.98 * fc1,isin = "Prognose 1")
df_Fc2 = data.frame(time = seq( start_date, end_date, by = "1 month" ), fc2 , upper_bound = 1.02*M, lower_bound = 0.98 * fc2,isin = "Prognose 2")
df_Fc3 = data.frame(time = seq( start_date, end_date, by = "1 month" ), fc3 , upper_bound = 1.02*M, lower_bound = 0.98 * fc3,isin = "Prognose 3")
lager_data_fore %>%
filter(Lager == c("A")) %>%
ggplot(aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager)) +
xlab("Monate") + theme_bw() +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month", expand = c(0.05, 0, 0.05, 0)) +
scale_color_manual(values = c("A" = "steelblue")) +
geom_vline(xintercept = as.numeric(as.Date("2022-07-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept = as.numeric(as.Date("2022-08-01")), linetype=2,  color = "darkgrey") +
geom_vline(xintercept= as.numeric(as.Date("2022-09-01")), linetype=2,  color = "darkgrey") +
geom_smooth(aes(x=time, y=fc1), colour='blue', data=df_Fc1, stat='identity') +
geom_smooth(aes(x=time, y=fc2), colour='#E6B700', data=df_Fc2, stat='identity') +
geom_smooth(aes(x=time, y=fc3), colour='green', data=df_Fc3, stat='identity') +
scale_color_manual(name = "Forecast", values = c("fc1" = "blue", "fc2" = "#E6B700", "fc3" = "green"), labels = c("Forecast 1", "Forecast 2", "Forecast 3"),
guide = "legend")
#plot with
lager_data_fore$Monate_num <- as.numeric(lager_data_fore$Monate)
lager_data_fore$Monate_num <- seq.int(1, length(lager_data_fore$Monate))
View(lager_data_fore)
start_date <- 39
end_date <- 42
fc1 = c(190, 185, 185, 180)
fc2 = c(190, 195, 200, 185)
fc3 = c(190, 180, 170, 165)
df_Fc1 = data.frame(time = seq( start_date, end_date, by = 1 ), fc1 , upper_bound = 1.02*M, lower_bound = 0.98 * fc1,isin = "Prognose 1")
df_Fc2 = data.frame(time = seq( start_date, end_date, by = 1 ), fc2 , upper_bound = 1.02*M, lower_bound = 0.98 * fc2,isin = "Prognose 2")
df_Fc3 = data.frame(time = seq( start_date, end_date, by = 1 ), fc3 , upper_bound = 1.02*M, lower_bound = 0.98 * fc3,isin = "Prognose 3")
labeller_sec_x <- function(x) {
format(x / 12, digits = 0)
}
lager_data_fore %>%
filter(Lager == c("A")) %>%
ggplot(aes(x = Monate_num), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_continuous(limits = c(1,42),
breaks = seq(from = 1, to = max(lager_data_fore$Monate_num), by = 5)) +
xlab("Monate") + theme_bw() +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
geom_vline(xintercept = 40, linetype=2,  color = "darkgrey") +
geom_vline(xintercept = 41, linetype=2,  color = "darkgrey") +
geom_vline(xintercept = 42, linetype=2,  color = "darkgrey") +
geom_smooth(aes(x=time, y=fc1), colour='blue', data=df_Fc1, stat='identity') +
geom_smooth(aes(x=time, y=fc2), colour='#E6B700', data=df_Fc2, stat='identity') +
geom_smooth(aes(x=time, y=fc3), colour='green', data=df_Fc3, stat='identity') +
scale_color_manual(name = "Legende",
values = c("A" = "#878787", "fc1" = "blue", "fc2" = "#E6B700", "fc3" = "green"),
labels = c("Lager A", "Forecast 1", "Forecast 2", "Forecast 3"))
lager_data_fore %>%
filter(Lager == c("A")) %>%
ggplot(aes(x = Monate_num), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype="Lager")) +
scale_x_continuous(limits = c(1,42),
breaks = seq(from = 1, to = max(lager_data_fore$Monate_num), by = 5)) +
xlab("Monate") + theme_bw() +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
geom_vline(xintercept = 40, linetype=2,  color = "darkgrey") +
geom_vline(xintercept = 41, linetype=2,  color = "darkgrey") +
geom_vline(xintercept = 42, linetype=2,  color = "darkgrey") +
geom_line(aes(x=time, y=fc1, linetype = "Prognose 1"), colour='blue', data=df_Fc1, stat='identity') +
geom_line(aes(x=time, y=fc2, linetype = "Prognose 2"), colour='#E6B700', data=df_Fc2, stat='identity') +
geom_line(aes(x=time, y=fc3, linetype = "Prognose 3"), colour='green', data=df_Fc3, stat='identity') +
scale_color_manual(name = "Legende",
values = c("A" = "#878787"),
labels = c("Lager A")) +
scale_linetype_manual(name = "Prognosen",
values = c("Lager" = "solid", "Prognose 1" = "solid", "Prognose 2" = "solid", "Prognose 3" = "solid")) +
scale_size_manual(name = "Prognosen",
values = c("Prognose 1" = 1.2, "Prognose 2" = 1.2, "Prognose 3" = 1.2)) +
# scale_shape_manual(name = "Prognosen",
#                    values = c("Prognose 1" = 0, "Prognose 2" = 1, "Prognose 3" = 2)) +
scale_color_manual(name = "Prognosen",
values = c('#878787', 'blue', '#E6B700', 'green'),
labels = c("Lager", "Prognose 1", "Prognose 2", "Prognose 3")) +
scale_shape_discrete(name = "color")
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt von C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt von C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt von C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt von C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt von C & D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "DurchschnittCundD"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "DurchschnittCundD"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# three warehouses with average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "DurchschnittCundD"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# forecast plot for warehouse A
lager_data_fore <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel_forecast.xlsx")
lager_data["Monate"] <- as.Date(lager_data$Monate)
View(lager_data)
lager_data <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel.xlsx")
View(lager_data)
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
lager_data["Monate"] <- as.Date(lager_data$Monate)
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt C und D"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
lager_data <- read_excel("SeaDrive/Meine Bibliotheken/Master/Master-Thesis/Daten/lager_beispiel.xlsx")
View(lager_data)
lager_data["Monate"] <- as.Date(lager_data$Monate)
# all three line for Lager A, B and average
ggplot(lager_data, aes(x = Monate), group = 1) +
geom_line(aes(y = Kartonanzahl, colour = Lager, linetype = Lager %in% c("A","B"))) +
xlab("Monate") + theme_bw() +
scale_linetype_manual(values = c("TRUE" = "solid", "FALSE" = "dashed")) +
guides(linetype = FALSE) +
geom_point(aes(y = Kartonanzahl, colour = Lager)) +
scale_x_date(date_labels = "%b %y", date_minor_breaks = "1 month", date_breaks = "1 month") +
scale_color_manual(values = c("A" = "steelblue","B" = "orange", "Durchschnitt"= "purple")) +
scale_y_continuous(name = "Kartonanzahl", expand = c(2, -80))
shiny::runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-right')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-left')
runApp('workspace/master-thesis-mainrepo/shiny-apps/prediction-interface-seasonal-data-increasing-left')
